services:
  mongodb:
    image: mongo:latest
    container_name: mijn-mongo
    volumes:
      - ./data:/data/db
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: mijn-api
    ports:
      - "3000:12345"  # API on port 3000 locally
    environment:
      MONGO_URL: mongodb://mijn-mongo:27017
      PORT: 12345
      DB_NAME: myapp
    depends_on:
      - mongodb
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mijn-frontend
    ports:
      - "80:80"  # Frontend on port 80
    depends_on:
      - api
    restart: unless-stopped

  db-exporter:
    image: bitnami/mongodb-exporter:latest
    container_name: mongo-exporter
    environment:
      - MONGODB_URI=mongodb://mijn-mongo:27017
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/alerts:/etc/prometheus/alerts  # Mount the entire alerts directory
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    build:
      context: monitoring/grafana
      dockerfile: Dockerfile
    container_name: grafana
    ports:
      - "3100:3000"  # Changed from 3000:3000
    depends_on:
      - prometheus
    restart: unless-stopped

  alertmanager:
    build:
      context: monitoring/alertmanager
      dockerfile: Dockerfile
    container_name: alertmanager
    env_file:
      - ./.env.monitoring
    ports:
      - "9093:9093"
    restart: unless-stopped
    depends_on:
      - prometheus